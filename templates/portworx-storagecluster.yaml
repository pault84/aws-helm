{{- $usefileSystemDrive := .Values.storage.usefileSystemDrive | default false }}
{{- $drives := .Values.storage.drives | default "none" }}
{{- $usedrivesAndPartitions := .Values.storage.usedrivesAndPartitions | default false }}
{{- $maxStorageNodesPerZone := .Values.storage.maxStorageNodesPerZone | default "none" }}
{{- $dataInterface := .Values.dataInterface | default "none" }}
{{- $managementInterface := .Values.managementInterface | default "none" }}

apiVersion: core.libopenstorage.org/v1alpha1
kind: StorageCluster
metadata:
  name: {{ .Values.clusterName }}
  namespace: kube-system
  annotations:
    portworx.com/install-source: helm/{{.Release.Service}}-r{{.Release.Revision}}
    portworx.com/helm-vars: chart="{{.Chart.Name}}-{{.Chart.Version}}"{{range $k, $v := .Values }}{{if $v}},{{ $k }}="{{ $v }}" {{end}}{{end}}
spec:
  image: paultheunis/oci-monitor:{{ required "A valid Image tag is required in the SemVer format" .Values.imageVersion }}
  imagePullPolicy: Always
  kvdb:
    internal: true
  {{- if eq $drives "none" }}
  storage:
    useAllWithPartitions: {{ $usedrivesAndPartitions }}
    forceUseDisks: {{ $usefileSystemDrive }}
    journalDevice: auto
    kvdbDevice: type=gp2,size=150
    {{- if ne $maxStorageNodesPerZone  "none" }}
    maxStorageNodesPerZone: {{ .Values.maxStorageNodesPerZone }}
    {{- end }}
  {{- else }}
  cloudStorage:
    deviceSpecs:
    {{- $driveNames := $drives | split ";" }}
    {{- range $index, $name := $driveNames }}
    - {{ $name }}
    {{- end }}
    journalDevice: auto
    kvdbDeviceSpec: type=gp2,size=150
    {{- if ne $maxStorageNodesPerZone  "none" }}
    maxStorageNodesPerZone: {{ .Values.maxStorageNodesPerZone }}
    {{- end }}
  {{- end }}
  {{- if (ne $dataInterface "none") or (ne $managementInterface "none") }}
  network:
    {{- if ne $dataInterface "none" }}
    dataInterface: {{ .Values.dataInterface }}
    {{- end }}
    {{- if ne $managementInterface "none" }}
    mgmtInterface: {{ .Values.managementInterface }}
    {{- end }}
  {{- end }}
  secretsProvider: k8s
  stork:
    enabled: true
    image: libopenstorage/stork:{{ required "A valid Image tag is required in the SemVer format" .Values.storkVersion }}
  autopilot:
    enabled: true
    image: portworx/autopilot:{{ required "A valid Image tag is required in the SemVer format" .Values.autopilotVersion }}
    providers:
    - name: default
      type: prometheus
      params:
        url: http://prometheus:9090
  {{- if .Values.csi }}
  featureGates:
    CSI: "true"
  {{- end }}
