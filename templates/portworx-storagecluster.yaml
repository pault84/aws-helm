{{/* Setting defaults if they are omitted. */}}
{{- $clusterName := .Values.clusterName | default "mycluster" }}
{{- $drives := .Values.drives | default "none" }}
{{- $usefileSystemDrive := .Values.usefileSystemDrive | default false }}
{{- $usedrivesAndPartitions := .Values.usedrivesAndPartitions | default false }}
{{- $maxStorageNodesPerZone := .Values.maxStorageNodesPerZone | default "none" }}

{{- $dataInterface := .Values.dataInterface | default "none" }}
{{- $managementInterface := .Values.managementInterface | default "none" }}

{{- $envVars := .Values.envVars | default "none" }}
{{- $csi := .Values.csi | default false }}

apiVersion: core.libopenstorage.org/v1alpha1
kind: StorageCluster
metadata:
  name: {{ $clusterName }}
  namespace: kube-system
  annotations:
    portworx.com/install-source: helm/{{.Release.Service}}-r{{.Release.Revision}}
    portworx.com/helm-vars: chart="{{.Chart.Name}}-{{.Chart.Version}}"{{range $k, $v := .Values }}{{if $v}},{{ $k }}="{{ $v }}"{{end}}{{end}}
spec:
  image: portworx/oci-monitor:{{.Values.imageVersion}}
  imagePullPolicy: Always
  kvdb:
    internal: true
  {{- if eq $drives "none" }}
  storage:
    useAllWithPartitions: {{ $usedrivesAndPartitions }}
    forceUseDisks: {{ $usefileSystemDrive }}
    journalDevice: auto
    kvdbDevice: type=gp2,size=150
    {{- if ne $maxStorageNodesPerZone  "none" }}
    maxStorageNodesPerZone: {{ $maxStorageNodesPerZone }}
    {{- end -}}
  {{- else -}}
  cloudStorage:
    deviceSpecs:
		{{- $driveNames := $drives | split ";" }}
    {{- range $index, $name := $driveNames }}
		- {{ $name }
		{{- end -}}
    journalDevice: auto
    kvdbDeviceSpec: type=gp2,size=150
    {{- if ne $maxStorageNodesPerZone  "none" }}
    maxStorageNodesPerZone: {{ $maxStorageNodesPerZone }}
    {{- end -}}
  {{- end -}}
  {{- if (ne $dataInterface "none") or (ne $mgmtInterface "none") }}
  network:
    {{- if ne $dataInterface "none" }}
    dataInterface: "{{ $dataInterface }}"
    {{- end -}}
    {{- if ne $managementInterface "none" }}
    mgmtInterface: "{{ $managementInterface }}"
  {{- end -}}
  secretsProvider: k8s
  stork:
    enabled: true
    image: openstorage/stork:{{.Values.storkVersion}}
  autopilot:
    enabled: true
    image: portworx/autopilot:{{.Values.autopilotVersion}}
    providers:
    - name: default
      type: prometheus
      params:
        url: http://prometheus:9090
  {{- if $csi -}}
  featureGates:
    CSI: "true"
  {{- end -}}
